@model DashboardReportApp.Models.ToolingHistoryModel
@removeTagHelper Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper, Microsoft.AspNetCore.Mvc.TagHelpers

@{
    var peopleAll = ViewBag.PeopleAll as List<string> ?? new List<string> { "Emery, J", "Shuckers, C", "Klebecha, B" };
    var selectedInitiator = string.IsNullOrWhiteSpace(Model.InitiatedBy) ? "Emery, J" : Model.InitiatedBy;

    var reasons = new List<(string Value, string Label)>
    {
        ("New","New (5030)"),
        ("Repair","Repair (5045)"),
        ("Breakage","Breakage (5040)"),
        ("Fitting","Fitting")
    };

    var vendors = new List<string>
    {
        "J.I.T. Tool & Die",
        "Gerg Tool & Die Inc.",
        "Quala Die",
        "Internal"
    };

    string DateOrEmpty(DateTime? dt) => dt.HasValue ? dt.Value.ToString("yyyy-MM-dd") : "";
    string DateOrEmptyNonNull(DateTime dt) => dt.ToString("yyyy-MM-dd");
}

<div class="modal-header">
    <h5 class="modal-title">Edit Tool History — Group @Model.GroupID</h5>
    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
</div>

<form id="toolHistoryForm"
      asp-controller="ToolingHistory"
      asp-action="SaveToolingHistory"
      method="post">
    @Html.AntiForgeryToken()
    <input type="hidden" name="Id" value="@Model.Id" />
    <input type="hidden" name="GroupID" value="@Model.GroupID" />
    
    @{
        var allErrors = ViewData.ModelState
        .Where(kvp => kvp.Value?.Errors?.Count > 0)
        .SelectMany(kvp => kvp.Value!.Errors.Select(e => e.ErrorMessage))
        .Where(m => !string.IsNullOrWhiteSpace(m))
        .ToList();
    }
    @if (allErrors.Count > 0)
    {
        <div class="alert alert-danger" role="alert">
            <strong>Please fix the following:</strong>
            <ul class="mb-0">
                @foreach (var err in allErrors)
                {
                    <li>@err</li>
                }
            </ul>
        </div>
    }
    <div class="modal-body">
        <p class="text-muted mb-2"><span class="text-danger">*</span> Required</p>

        <div class="row g-3">
            <div class="col-md-4">
                <label class="form-label">Assembly # (Part) <span class="text-danger req">*</span></label>
                <input class="form-control" name="Part" value="@Model.Part" required />
            </div>
            <div class="col-md-4">
                <label class="form-label">Tool Number</label>
                <input class="form-control" name="ToolNumber" value="@Model.ToolNumber" />
            </div>
            <div class="col-md-2">
                <label class="form-label">Revision</label>
                <input class="form-control" name="Revision" value="@Model.Revision" />
            </div>
            <div class="col-md-2">
                <label class="form-label">PO</label>
                <input class="form-control" name="PO" value="@Model.PO" />
            </div>

            <div class="col-md-4">
                <label class="form-label">Reason <span class="text-danger req">*</span></label>
                <select name="Reason" class="form-select">
                    @foreach (var r in reasons)
                    {
                        <option value="@r.Value" @(string.Equals(Model.Reason ?? "", r.Value, StringComparison.OrdinalIgnoreCase) ? "selected" : "")>
                            @r.Label
                        </option>
                    }
                </select>
            </div>

            <div class="col-md-4">
                <label class="form-label">Tool Vendor <span class="text-danger req">*</span></label>
                <select name="ToolVendor" class="form-select">
                    @foreach (var v in vendors)
                    {
                        <option value="@v" @(string.Equals(Model.ToolVendor ?? "", v, StringComparison.OrdinalIgnoreCase) ? "selected" : "")>
                            @v
                        </option>
                    }
                </select>
            </div>

            <div class="col-md-4">
                <label class="form-label">Initiated By <span class="text-danger req">*</span></label>
                <select name="InitiatedBy" class="form-select">
                    @foreach (var p in peopleAll)
                    {
                        <option value="@p" @(string.Equals(selectedInitiator, p, StringComparison.OrdinalIgnoreCase) ? "selected" : "")>
                            @p
                        </option>
                    }
                </select>
            </div>

            <div class="col-md-4">
                <label class="form-label">Date Initiated</label>
                <input class="form-control" type="date" name="DateInitiated"
                       value="@(DateOrEmptyNonNull(Model.DateInitiated))" />
            </div>

            <div class="col-md-4">
                <label class="form-label">Date Due</label>
                <input class="form-control" type="date" name="DateDue"
                       value="@(DateOrEmpty(Model.DateDue))" />
            </div>

            <div class="col-md-4">
                <label class="form-label">Received Date</label>
                <input class="form-control" type="date" name="DateReceived"
                       value="@(DateOrEmpty(Model.DateReceived))" />
            </div>

            <div class="col-md-12">
                <label class="form-label">Tool Description</label>
                <input class="form-control" name="ToolDesc" value="@Model.ToolDesc" />
            </div>
        </div>
    </div>

    <div class="modal-footer">
        <button type="submit" class="btn btn-primary">Save</button>
        <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Close</button>
    </div>
</form>
