@model IEnumerable<DashboardReportApp.Models.ProcessChangeRequest>
@{
    ViewData["Title"] = "Admin View - Process Change Requests";
}
<li><a asp-controller="ProcessChangeRequest" asp-action="Index">Process Change Request</a></li>

<h2>Admin View - Process Change Requests</h2>

<!-- Global Validation Errors -->
@if (!ViewData.ModelState.IsValid)
{
    <div class="alert alert-danger">
        <strong>Validation Errors:</strong>
        <ul>
            @foreach (var state in ViewData.ModelState)
            {
                foreach (var error in state.Value.Errors)
                {
                    <li><strong>@state.Key:</strong> @error.ErrorMessage</li>
                }
            }
        </ul>
    </div>
}

<form asp-action="UpdateRequest" method="post" enctype="multipart/form-data">
    <table class="table table-bordered">
        <thead>
            <tr>
                <th>ID</th>
                <th>Timestamp</th>
                <th>Part</th>
                <th>Requester</th>
                <th>ReqDate</th>
                <th>Request</th>
                <th>Updated By</th>
                <th>Update Result</th>
                <th>File Address</th>
                <th>Test Requested</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        <input type="hidden" name="Id" value="@item.Id" />
                        @item.Id
                    </td>

                    <td>
                        <input type="hidden" name="Timestamp" value="@item.Timestamp.ToString("o")" />
                    </td>
                    <td>
                        <input type="text" name="Part" value="@item.Part" class="form-control" />
                        @Html.ValidationMessage("Part", "", new { @class = "text-danger" })
                    </td>
                    <td>
                        <input type="text" name="Requester" value="@item.Requester" class="form-control" />
                        @Html.ValidationMessage("Requester", "", new { @class = "text-danger" })
                    </td>
                    <td>
                        @(item.ReqDate.HasValue ? item.ReqDate.Value.ToShortDateString() : "")
                    </td>
                    <td>
                        <input type="text" name="Request" value="@item.Request" class="form-control" />
                        @Html.ValidationMessage("Request", "", new { @class = "text-danger" })
                    </td>
                    <td>
                        <input type="text" name="UpdatedBy" value="@item.UpdatedBy" class="form-control" />
                        @Html.ValidationMessage("UpdatedBy", "", new { @class = "text-danger" })
                    </td>
                    <td>
                        <input type="text" name="UpdateResult" value="@item.UpdateResult" class="form-control" />
                        @Html.ValidationMessage("UpdateResult", "", new { @class = "text-danger" })
                    </td>
                    <td>
                        <input type="hidden" name="FileAddress" value="@item.FileAddress" />
                        <input type="file" name="FileUpload" />
                        @if (!string.IsNullOrEmpty(item.FileAddress))
                        {
                            <a href="@item.FileAddress" target="_blank">View File</a>
                        }
                    </td>




                    <td>
                        <input type="text" name="TestRequested" value="@item.TestRequested" class="form-control" />
                        @Html.ValidationMessage("TestRequested", "", new { @class = "text-danger" })
                    </td>
                    <td>
                        <button type="submit" class="btn btn-primary">Save</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</form>
