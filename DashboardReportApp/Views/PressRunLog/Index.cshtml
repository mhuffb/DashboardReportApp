@model List<DashboardReportApp.Models.PressRunLogModel>
@using System.Text.Json;

@{
    ViewData["Title"] = "Press Run Log";

    // Operators for the Login form
    var operators = ViewData["Operators"] as List<string> ?? new List<string>();

    // Dictionary of (part, run) => machine from presssetup
    var openParts = ViewData["OpenParts"] as Dictionary<(string, string), string>
                    ?? new Dictionary<(string, string), string>();

    // "Open runs" from ViewBag - typically rows with endDateTime=null
    var openRuns = ViewBag.OpenRuns as List<DashboardReportApp.Models.PressRunLogModel>
                   ?? new List<DashboardReportApp.Models.PressRunLogModel>();
}

/* ----------------------------------------------------------
   1) Login / Start Molding for Main Run
   This form collects operator, part, machine, runNumber,
   and inserts a new main run row (skidcount=0)
   with pcsStart from the device.
---------------------------------------------------------- */
<div class="container-fluid px-3">
    <h1 class="text-center mb-4">Press Run Log</h1>

    <h2 class="text-center">Start Molding</h2>
    <div class="card shadow mb-4">
        <div class="card-body">
            <form method="post" action="/PressRunLog/Login">
                <div class="mb-3">
                    <label for="Operator" class="form-label">Operator</label>
                    <select id="Operator" name="operatorName" class="form-control" required>
                        <option value="">Select an Operator</option>
                        @foreach (var op in operators)
                        {
                            <option value="@op">@op</option>
                        }
                    </select>
                </div>

                <div class="mb-3">
                    <label for="Part" class="form-label">Part</label>
                    <select id="Part" name="part" class="form-control" required onchange="updateHiddenRunAndMachine()">
                        <option value="">Select a Part</option>
                        @foreach (var entry in openParts)
                        {
                            <option value="@entry.Key.Item1"
                                    data-run="@entry.Key.Item2"
                                    data-machine="@entry.Value">
                                @entry.Key.Item1 (Run: @entry.Key.Item2)
                            </option>
                        }
                    </select>
                    <!-- hidden field for runNumber -->
                    <input type="hidden" id="RunNumber" name="runNumber" />
                </div>

                <div class="mb-3">
                    <label for="Machine" class="form-label">Machine</label>
                    <input type="text" id="Machine" name="machine" class="form-control" readonly />
                </div>

                <button type="submit" class="btn btn-primary w-100">Login</button>
            </form>
        </div>
    </div>
</div>

<script>
    // Populate runNumber and Machine on part selection
    function updateHiddenRunAndMachine() {
        const partSelect   = document.getElementById("Part");
        const runHidden    = document.getElementById("RunNumber");
        const machineInput = document.getElementById("Machine");

        const selectedOpt  = partSelect.options[partSelect.selectedIndex];
        if (!selectedOpt) return;

        const selectedRun     = selectedOpt.getAttribute("data-run")     || "";
        const selectedMachine = selectedOpt.getAttribute("data-machine") || "";

        runHidden.value    = selectedRun;
        machineInput.value = selectedMachine;
    }
</script>


<!-- ----------------------------------------------------------
     2) Table of Open Mold Runs
     Each run row includes:
       - "Logout" if skidcount==0
       - "End Run" button => opens a modal to enter scrap, notes
       - "Start Skid" if you want to do skid logic on the main run
---------------------------------------------------------- -->
<h2 class="text-center mb-4">Open Mold Runs</h2>
<div class="card shadow mb-4">
    <div class="card-body">
        <div class="table-responsive">
            <table class="table table-striped table-bordered shadow-sm wider-table">
                <thead class="table-dark">
                    <tr>
                        <th>ID</th>
                        <th>Timestamp</th>
                        <th>Part</th>
                        <th>Run</th>
                        <th>Operator</th>
                        <th>Machine</th>
                        <th>Start Time</th>
                        <th>Actions</th>
                        <th>Skid Action</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var record in openRuns)
                    {
                        <tr>
                            <td>@record.Id</td>
                            <td>@record.Timestamp</td>
                            <td>@record.Part</td>
                            <td>@record.Run</td>
                            <td>@record.Operator</td>
                            <td>@record.Machine</td>
                            <td>@record.StartDateTime</td>

                            <!-- Main run actions if skidCount==0.
                                 Otherwise "N/A."
                            -->
                            <td>
                                @if (record.SkidCount == 0)
                                {
                                    <!-- Logout form (simple) -->
                                    <form method="post" action="/PressRunLog/Logout" style="display:inline;">
                                        <input type="hidden" name="runId" value="@record.Id" />
                                        <input type="hidden" name="scrap" value="0" />
                                        <input type="hidden" name="notes" value="" />
                                        <button type="submit" class="btn btn-danger btn-sm">Logout</button>
                                    </form>

                                    <span><span>&nbsp;</span></span>

                                    <!-- "End Run" => open a modal so user can input scrap, notes -->
                                    <button type="button"
                                            class="btn btn-secondary btn-sm"
                                            onclick="openEndRunModal('@record.Id', '@record.Part')">
                                        End Run
                                    </button>
                                }
                                else
                                {
                                    <span>N/A</span>
                                }
                            </td>

                            <!--
                                Skid Action: only for the main run row (skidCount==0).
                                The service can handle "start skid" or "end previous skid" behind the scenes.
                            -->
                            <td>
                                @if (record.SkidCount == 0)
                                {
                                    <form method="post" action="/PressRunLog/StartSkid" style="display:inline;">
                                        <input type="hidden" name="runId" value="@record.Id" />
                                        <input type="hidden" name="operatorName" value="@record.Operator" />
                                        <input type="hidden" name="part" value="@record.Part" />
                                        <input type="hidden" name="machine" value="@record.Machine" />
                                        <input type="hidden" name="run" value="@record.Run" />
                                        <input type="hidden" name="skidcount" value="@record.SkidCount" />
                                        <button type="submit" class="btn btn-primary btn-sm">Start Skid</button>
                                    </form>
                                }
                                else
                                {
                                    <span>N/A</span>
                                }
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

<!-- ----------------------------------------------------------
     3) React Table of All Runs
---------------------------------------------------------- -->
<h2 class="text-center mt-4">All Mold Run Records</h2>
<div class="card shadow mb-4">
    <div class="card-body">
        <div class="container-fluid px-3 mt-4">
            <div id="myReactPressRunTableRoot"
                 data-records='@Html.Raw(JsonSerializer.Serialize(Model))'>
            </div>
        </div>
    </div>
</div>

<script src="/js/mydatatable.bundle.js"></script>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        const container = document.getElementById("myReactPressRunTableRoot");
        if (!container) return;

        const rawData = container.getAttribute("data-records");
        const data = JSON.parse(rawData); // List<PressRunLogModel>
        const columns = [
            { key: "Id",           label: "ID" },
            { key: "Timestamp",    label: "Timestamp" },
            { key: "Part",         label: "Part" },
            { key: "Run",          label: "Run" },
            { key: "Operator",     label: "Operator" },
            { key: "Machine",      label: "Machine" },
            { key: "StartDateTime",label: "Start Time" },
            { key: "EndDateTime",  label: "End Time" },
            { key: "PcsStart",     label: "Pcs Start" },
            { key: "PcsEnd",       label: "Pcs End" },
            { key: "Scrap",        label: "Scrap" },
            { key: "Notes",        label: "Notes" }
        ];

        if (window.renderMyDataTable) {
            window.renderMyDataTable("myReactPressRunTableRoot", data, columns, true);
        } else {
            console.error("React table render function not found!");
        }
    });
</script>

<!-- ----------------------------------------------------------
     4) End Run Modal
     Prompts user for scrap, notes. Then posts to /PressRunLog/EndRun
     The service method end run => ends last skid => ends main run
---------------------------------------------------------- -->
<div id="endRunModal" class="modal fade" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">End Run</h5>
                <button type="button" class="btn-close" onclick="closeEndRunModal()"></button>
            </div>
            <div class="modal-body">
                <form id="endRunForm" method="post" action="/PressRunLog/EndRun">
                    <input type="hidden" id="endRunRunId" name="runId" />
                    <input type="hidden" id="endRunPart" name="part" />

                    <div class="mb-3">
                        <label for="endRunScrap" class="form-label">Scrap</label>
                        <input type="number" id="endRunScrap" name="scrap"
                               class="form-control" value="0" min="0" />
                    </div>

                    <div class="mb-3">
                        <label for="endRunNotes" class="form-label">Notes</label>
                        <textarea id="endRunNotes" name="notes" class="form-control"></textarea>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" onclick="closeEndRunModal()">Cancel</button>
                <!-- Confirm posts form -->
                <button type="submit" form="endRunForm" class="btn btn-primary">Confirm End Run</button>
            </div>
        </div>
    </div>
</div>

<script>
    function openEndRunModal(runId, part) {
        document.getElementById("endRunRunId").value = runId;
        document.getElementById("endRunPart").value  = part;
        document.getElementById("endRunScrap").value = "0";
        document.getElementById("endRunNotes").value = "";

        const modal = new bootstrap.Modal(document.getElementById("endRunModal"));
        modal.show();
    }

    function closeEndRunModal() {
        const modalEl = document.getElementById("endRunModal");
        const modal   = bootstrap.Modal.getInstance(modalEl);
        modal.hide();
    }
</script>
