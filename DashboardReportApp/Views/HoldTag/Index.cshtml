@model DashboardReportApp.Models.HoldTagIndexViewModel
@using System.Text.Json
<script src="https://cdn.jsdelivr.net/npm/qrcode/build/qrcode.min.js"></script>
<h1 class="text-center mb-4">Hold Tag</h1>
<div class="container-fluid px-3 mt-4">
    <!-- Combined QR Codes -->
    <div class="row justify-content-center">
       
    <h8 class="text-center mb-4">You can upload pictures from your phone by connecting to wifi then viewing this page on your phone.</h8>
    </div>
    <div class="d-flex justify-content-evenly align-items-center mb-4">
        <!-- Wi‑Fi QR Code -->
        <div class="text-center">
            <canvas id="wifi-qr" style="width:128px; height:128px;"></canvas>
            <div class="mt-2">Connect to Wifi</div>
        </div>
        <!-- Current Page QR Code -->
        <div class="text-center">
            <canvas id="current-page-qr" style="width:128px; height:128px;"></canvas>
            <div class="mt-2">View on your device</div>
        </div>
    </div>


   

    <div class="row justify-content-center">
        <div class="col-md-8 col-lg-6">
            <div class="card shadow">
                <div class="card-body">
                    <h4 class="text-center mb-3">Submit a Hold Tag</h4>

                    <p class="text-center">
                        For immediate assistance, call/text until you get an answer:
                    </p>
                    <ul class="list-group mb-3">
                        <li class="form-control">Tom Grieneasen 814-591-2704</li>
                        <li class="form-control">Chico Almendarez 814-541-1181</li>
                        <li class="form-control">Roy Seltzer 814-335-7239</li>
                        <li class="form-control">Roger Jones 814-939-9412</li>
                    </ul>

                    @if (TempData["SuccessMessage"] != null)
                    {
                        <div class="alert alert-success alert-dismissible fade show text-center" role="alert">
                            @TempData["SuccessMessage"]
                            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                        </div>
                    }

                    @if (TempData["ErrorMessage"] != null)
                    {
                        <div class="alert alert-danger alert-dismissible fade show text-center" role="alert">
                            @TempData["ErrorMessage"]
                            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                        </div>
                    }

                    <!-- Submit new Hold Tag -->
                    <!-- Note: enctype="multipart/form-data" is REQUIRED for file uploads -->
                    <form asp-action="Submit" method="post" enctype="multipart/form-data">
                        @Html.AntiForgeryToken()

                        <!-- PART Selection (Dropdown + Custom Text) -->
                        <div class="mb-3">
                            <label for="Part" class="form-label">Part</label>
                            <select id="PartDropdown" class="form-control">
                                <option value="">-- Select or Enter Part --</option>
                                @foreach (var part in (ViewData["Parts"] as List<string>) ?? new List<string>())
                                {
                                    <option value="@part">@part</option>
                                }
                            </select>
                            <input type="text"
                                   id="CustomPartInput"
                                   name="Part"
                                   asp-for="FormModel.Part"
                                   class="form-control mt-2"
                                   placeholder="Type a custom part number if not listed" />
                            <span asp-validation-for="FormModel.Part" class="text-danger"></span>
                        </div>

                        <!-- OPERATOR Selection (Issued By) -->
                        <div class="mb-3">
                            <label for="IssuedBy" class="form-label">Issued By (Operator)</label>
                            <select id="IssuedBy"
                                    name="IssuedBy"
                                    asp-for="FormModel.IssuedBy"
                                    class="form-control">
                                <option value="">-- Select Operator --</option>
                                @if (ViewData["Operators"] is List<string> opList)
                                {
                                    foreach (var op in opList)
                                    {
                                        <option value="@op">@op</option>
                                    }
                                }
                            </select>
                            <span asp-validation-for="FormModel.IssuedBy" class="text-danger"></span>
                        </div>

                        <!-- DISCREPANCY -->
                        <div class="mb-3">
                            <label for="Discrepancy" class="form-label">Discrepancy</label>
                            <textarea id="Discrepancy"
                                      name="Discrepancy"
                                      asp-for="FormModel.Discrepancy"
                                      class="form-control text-area-large"
                                      required>
                            </textarea>
                            <span asp-validation-for="FormModel.Discrepancy" class="text-danger"></span>
                        </div>

                        <!-- QUANTITY -->
                        <div class="mb-3">
                            <label for="Quantity" class="form-label">Quantity</label>
                            <input type="number"
                                   id="Quantity"
                                   name="Quantity"
                                   asp-for="FormModel.Quantity"
                                   class="form-control"
                                   required />
                            <span asp-validation-for="FormModel.Quantity" class="text-danger"></span>
                        </div>

                        <!-- File Upload (Optional) - Only for FileAddress1 -->
                        <div class="mb-3">
                            <label for="File" class="form-label">Attach File (Optional)</label>
                            <input type="file"
                                   name="file"
                                   id="File"
                                   class="form-control" />
                        </div>

                        <button type="submit" class="btn btn-primary w-100">
                            <i class="bi bi-send"></i> Submit
                        </button>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- READ-ONLY TABLE OF HOLD TAG RECORDS -->
<div class="container-fluid px-3 mt-4">
    <h2 class="text-center mb-4">Hold Tag Records</h2>
    <!-- Filters for the table -->
    <div class="row mb-3">
        <div class="col-md-6">
            <input type="text" id="recordSearchInput" class="form-control" placeholder="Search records..." />
        </div>
        <div class="col-md-6">
            <input type="date" id="recordDateFilter" class="form-control" />
        </div>
    </div>
    <div class="table-responsive">
        <table class="custom-table" style="width:100%; border-collapse:collapse;">
            <thead class="table-dark">
                <tr>
                    <th class="sortable" data-label="ID" style="width: 3%;">ID</th>
                    <th class="sortable" data-label="Part" style="width: 7%;">Part</th>
                    <th class="sortable" data-label="Discrepancy" style="width: 10%;">Discrepancy</th>
                    <th class="sortable" data-label="Date" style="width: 7%;">Date</th>
                    <th class="sortable" data-label="Issued By" style="width: 7%;">Issued By</th>
                    <th class="sortable" data-label="Disposition" style="width: 10%;">Disposition</th>
                    <th class="sortable" data-label="Disposition By" style="width: 6%;">Disposition By</th>
                    <th class="sortable" data-label="Rework Instructions" style="width: 10%;">Rework Instructions</th>
                    <th class="sortable" data-label="Rework Instr By" style="width: 7%;">Rework Instr By</th>
                    <th class="sortable" data-label="Quantity" style="width: 4%;">Quantity</th>
                    <th class="sortable" data-label="Unit" style="width: 7%;">Unit</th>
                    <th class="sortable" data-label="Pcs Scrapped" style="width: 4%;">Pcs Scrapped</th>
                    <th class="sortable" data-label="Date Completed" style="width: 7%;">Date Completed</th>
                    <th class="sortable" data-label="File1" style="width: 5%;">File 1</th>
                    <th class="sortable" data-label="File2" style="width: 5%;">File 2</th>
                    <th style="width: 6%;">Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var record in Model.Records)
                {
                    <tr>
                        <td>@record.Id</td>
                        <td>@record.Part</td>
                        <td>@record.Discrepancy</td>
                        <td>@(record.Date?.ToString("yyyy-MM-dd") ?? "")</td>
                        <td>@record.IssuedBy</td>
                        <td>@record.Disposition</td>
                        <td>@record.DispositionBy</td>
                        <td>@record.ReworkInstr</td>
                        <td>@record.ReworkInstrBy</td>
                        <td>@record.Quantity</td>
                        <td>@record.Unit</td>
                        <td>@record.PcsScrapped</td>
                        <td>@(record.DateCompleted?.ToString("yyyy-MM-dd") ?? "")</td>
                        <td>
                            @if (!string.IsNullOrEmpty(record.FileAddress1))
                            {
                                <button type="button"
                                        class="btn btn-info btn-sm fetch-image-btn"
                                        data-file-path="@record.FileAddress1">
                                    Preview 1
                                </button>
                            }
                        </td>
                        <td>
                            @if (!string.IsNullOrEmpty(record.FileAddress2))
                            {
                                <button type="button"
                                        class="btn btn-info btn-sm fetch-image-btn"
                                        data-file-path="@record.FileAddress2">
                                    Preview 2
                                </button>
                            }
                        </td>
                        <td>
                            <button type="button"
                                    class="btn btn-secondary btn-sm add-file-btn"
                                    data-id="@record.Id">
                                Add / Update File1
                            </button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<!-- Modal: Add / Update File1 -->
<div class="modal fade" id="addFileModal" tabindex="-1" aria-labelledby="addFileModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-md">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addFileModalLabel">Attach File 1</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form asp-action="UpdateFile" method="post" enctype="multipart/form-data">
                <div class="modal-body">
                    <input type="hidden" name="id" id="add-file-id" />
                    <div class="mb-3">
                        <label for="add-fileinput" class="form-label">Select File</label>
                        <input type="file" name="file" id="add-fileinput" class="form-control" required />
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Attach File</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Bootstrap Modal for File Preview -->
<div class="modal fade" id="imageModal" tabindex="-1" aria-labelledby="imageModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="imageModalLabel">File Preview</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body text-center">
                <img id="modalImage" src="" alt="Preview" class="img-fluid" style="display:none;" />
                <iframe id="modalFile" class="w-100" style="height:500px; display:none;" frameborder="0"></iframe>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Copy selected part from the dropdown into the text input
        document.addEventListener('DOMContentLoaded', function () {
            const partDropdown = document.getElementById('PartDropdown');
            const customPartInput = document.getElementById('CustomPartInput');
            partDropdown.addEventListener('change', () => {
                customPartInput.value = partDropdown.value;
            });
        });
    </script>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Modal and table scripts here...
            // (your existing modal and filtering/sorting scripts)
        });
    </script>

    <!-- QR Code Generation for Both QR Codes -->
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Generate QR code for the current page
            var currentUrl = window.location.href;
            QRCode.toCanvas(document.getElementById('current-page-qr'), currentUrl, {
                width: 128
            }, function (error) {
                if (error) {
                    console.error(error);
                } else {
                    console.log("Current page QR code generated!");
                }
            });

            // Generate QR code for Wi‑Fi connection
            var wifiData = `WIFI:T:WPA;S:guest-WiFi;P:Sintergyguest;;`;
            QRCode.toCanvas(document.getElementById('wifi-qr'), wifiData, {
                width: 128
            }, function (error) {
                if (error) {
                    console.error(error);
                } else {
                    console.log("Wi‑Fi QR code generated!");
                }
            });
        });
    </script>
}
