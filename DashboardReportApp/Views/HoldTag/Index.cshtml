@model DashboardReportApp.Models.HoldTagIndexViewModel

@using System.Text.Json

<div class="container-fluid px-3 mt-4">
    <h1 class="text-center mb-4">Hold Tag</h1>

    <div class="row justify-content-center">
        <div class="col-md-8 col-lg-6">
            <div class="card shadow">
                <div class="card-body">
                    <h4 class="text-center mb-3">Submit a Hold Tag</h4>

                    <p class="text-center">For immediate assistance, call/text until you get an answer:</p>
                    <ul class="list-group mb-3">
                        <li class="form-control">Tom Grieneisen 814-591-2704</li>
                        <li class="form-control">Chico Almendarez 814-541-1181</li>
                        <li class="form-control">Roy Seltzer 814-335-7239</li>
                        <li class="form-control">Roger Jones 814-939-9412</li>
                    </ul>

                    @if (TempData["SuccessMessage"] != null)
                    {
                        <div class="alert alert-success alert-dismissible fade show text-center" role="alert">
                            @TempData["SuccessMessage"]
                            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                        </div>
                    }

                    @if (TempData["ErrorMessage"] != null)
                    {
                        <div class="alert alert-danger alert-dismissible fade show text-center" role="alert">
                            @TempData["ErrorMessage"]
                            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                        </div>
                    }

                    <form asp-action="Submit" method="post">
                        @Html.AntiForgeryToken()

                        <div class="mb-3">
                            <label for="Part" class="form-label">Part</label>
                            <select id="PartDropdown" class="form-control">
                                <option value="">-- Select or Enter Part --</option>
                                @foreach (var part in (ViewData["Parts"] as List<string>) ?? new List<string>())
                                {
                                    <option value="@part">@part</option>
                                }
                            </select>
                            <input type="text" id="CustomPartInput" name="Part" asp-for="FormModel.Part" class="form-control mt-2" placeholder="Type a custom part number if not listed" />
                            <span asp-validation-for="FormModel.Part" class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <label for="Discrepancy" class="form-label">Discrepancy</label>
                            <textarea id="Discrepancy" name="Discrepancy" asp-for="FormModel.Discrepancy" class="form-control text-area-large" required></textarea>
                            <span asp-validation-for="FormModel.Discrepancy" class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <label for="Quantity" class="form-label">Quantity</label>
                            <input type="number" id="Quantity" name="Quantity" asp-for="FormModel.Quantity" class="form-control" required />
                            <span asp-validation-for="FormModel.Quantity" class="text-danger"></span>
                        </div>

                        <button type="submit" class="btn btn-primary w-100"><i class="bi bi-send"></i> Submit</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="container mt-4">
    <h3 class="text-center mt-4">All Hold Tags</h3>
    <div class="card shadow mb-4">
        <div class="card-body">
            <div id="holdTagTableRoot" data-records='@Html.Raw(JsonSerializer.Serialize(Model.Records))'></div>
        </div>
    </div>
</div>

<script src="/js/mydatatable.bundle.js"></script>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        const container = document.getElementById("holdTagTableRoot");
        if (!container) return;

        const rawData = container.getAttribute("data-records");
        const data = JSON.parse(rawData);

        const columns = [
            { key: "Id", label: "ID" },
            { key: "Part", label: "Part" },
            { key: "Discrepancy", label: "Discrepancy" },
            { key: "Date", label: "Date" },
            { key: "IssuedBy", label: "Issued By" },
            { key: "Disposition", label: "Disposition" },
            { key: "DispositionBy", label: "Disposition By" },
            { key: "ReworkInstrBy", label: "Rework Instructions By" },
            { key: "Quantity", label: "Quantity" },
            { key: "Unit", label: "Unit" },
            { key: "PcsScrapped", label: "pcsScrapped" },
            { key: "DateCompleted", label: "Date Completed" },
            { key: "FileAddress", label: "FileAddress" },
        ];

        if (window.renderMyDataTable) {
            window.renderMyDataTable("holdTagTableRoot", data, columns, true);
        } else {
            console.error("React table render function not found!");
        }
    });
</script>
