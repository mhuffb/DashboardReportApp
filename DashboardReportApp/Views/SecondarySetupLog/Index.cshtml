@model List<DashboardReportApp.Models.SecondarySetupLogModel>
@using System.Text.Json

<div class="container mt-4">
    <h1 class="text-center mb-4">Secondary Setup Log</h1>
    <div class="d-flex justify-content-center mb-4">
        <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#setupModal">
            Add Setup
        </button>
    </div>
</div>

<!-- Modal -->
<div class="modal fade" id="setupModal" tabindex="-1" aria-labelledby="setupModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="setupModalLabel">Start Setup</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form asp-action="CreateSetup" method="post">
                    <div class="mb-3">
                        <label for="Operator" class="form-label">Operator:</label>
                        <select id="Operator" name="Operator" class="form-control bg-black text-goldenrod border-goldenrod" required>
                            <option value="">-- Select Operator --</option>
                            @foreach (var op in (IEnumerable<string>)ViewBag.Operators)
                            {
                                <option value="@op">@op</option>
                            }
                        </select>
                    </div>

                    <div class="mb-3">
                        <label for="Machine" class="form-label">Machine:</label>
                        <select id="Machine" name="Machine" class="form-control bg-black text-goldenrod border-goldenrod" required>
                            <option value="">-- Select Machine --</option>
                            @foreach (var machine in (IEnumerable<string>)ViewBag.Machines)
                            {
                                <option value="@machine">@machine</option>
                            }
                        </select>
                    </div>

                    <div class="mb-3">
                        <label for="Run" class="form-label">Run #:</label>
                        <input type="text" id="Run" name="Run" class="form-control bg-black text-goldenrod border-goldenrod" required />
                    </div>

                    <div class="mb-3">
                        <label for="Op" class="form-label">Op:</label>
                        <input type="text" id="Op" name="Op" class="form-control bg-black text-goldenrod border-goldenrod" required />
                    </div>

                    <div class="mb-3">
                        <label for="Pcs" class="form-label">Pieces:</label>
                        <input type="number" id="Pcs" name="Pcs" class="form-control bg-black text-goldenrod border-goldenrod" />
                    </div>

                    <div class="mb-3">
                        <label for="ScrapMach" class="form-label">Machined Scrap:</label>
                        <input type="number" id="ScrapMach" name="ScrapMach" class="form-control bg-black text-goldenrod border-goldenrod" />
                    </div>

                    <div class="mb-3">
                        <label for="ScrapNonMach" class="form-label">Non-Machined Scrap:</label>
                        <input type="number" id="ScrapNonMach" name="ScrapNonMach" class="form-control bg-black text-goldenrod border-goldenrod" />
                    </div>

                    <div class="mb-3">
                        <label for="Notes" class="form-label">Notes:</label>
                        <textarea id="Notes" name="Notes" class="form-control bg-black text-goldenrod border-goldenrod text-area-large"></textarea>
                    </div>

                    <div class="mb-3">
                        <label for="SetupHours" class="form-label">Setup Hours:</label>
                        <input type="number" step="0.1" id="SetupHours" name="SetupHours" class="form-control bg-black text-goldenrod border-goldenrod" />
                    </div>

                    <button type="submit" class="btn btn-primary w-100">
                        <i class="bi bi-play-circle"></i> Add Setup
                    </button>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- All Runs Table (React Component) -->
<div class="container mt-4">
    <h3 class="text-center mt-4">All Runs</h3>
    <div class="card shadow mb-4">
        <div class="card-body">
            <!-- The React table will use the JSON data from the entire model -->
            <div id="myReactTableRoot" data-records='@Html.Raw(JsonSerializer.Serialize(Model))'></div>
        </div>
    </div>
</div>

<!-- Load your React bundle -->
<script src="/js/mydatatable.bundle.js"></script>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        const container = document.getElementById("myReactTableRoot");
        if (!container) return;

        // Retrieve JSON data (the model is a list of runs)
        const rawData = container.getAttribute("data-records");
        const data = JSON.parse(rawData);

        // Define columns for the React table (adjust keys as needed)
        const columns = [
            { key: "Id", label: "ID" },
            { key: "Timestamp", label: "Timestamp" },
            { key: "ProdNumber", label: "ProdNumber" },
            { key: "Run", label: "Run #" },
            { key: "Part", label: "Part" },
            { key: "Op", label: "Op" },
            { key: "Operator", label: "Operator" },
            { key: "SetupHours", label: "Setup Hours" },
            { key: "Machine", label: "Machine" },
            { key: "Notes", label: "Notes" }
        ];

        // Render the React table using your MyDataTable component's render function
        if (window.renderMyDataTable) {
            window.renderMyDataTable("myReactTableRoot", data, columns, true);
        } else {
            console.error("React table render function not found!");
        }
    });
</script>
