@model IEnumerable<MaintenanceRequestModel>

@{
    ViewData["Title"] = "Maintenance Requests";
    var requesters = ViewData["Requesters"] as List<string>;
    var equipmentList = ViewData["EquipmentList"] as List<string>;
}

<h1>Maintenance Requests</h1>

@if (TempData["Success"] != null)
{
    <div class="alert alert-success">@TempData["Success"]</div>
}

@if (TempData["Error"] != null)
{
    <div class="alert alert-danger">@TempData["Error"]</div>
}

<table class="table table-bordered">
    <thead>
        <tr>
            <th>ID</th>
            <th>Equipment</th>
            <th>Requester</th>
            <th>Problem</th>
            <th>Machine Down</th>
            <th>Hour Meter</th>
            <th>Department</th>
            <th>File</th>
            <th>Update File</th>
        </tr>
    </thead>
    <tbody>
        <!-- Blank row for adding new requests -->
        <tr>
            <form asp-action="AddRequest" method="post" enctype="multipart/form-data">
            <td>New</td>
            <td>
                <select name="Equipment" class="form-control" required>
                    <option value="">Select Equipment</option>
                        @foreach (var equipment in equipmentList)
                        {
                            var equipmentParts = equipment.Split(" - ");
                            var equipmentId = equipmentParts[0];
                            var equipmentName = equipmentParts.Length > 1 ? equipmentParts[1] : string.Empty;
                        <option value="@equipmentId">@equipmentId - @equipmentName</option>
                        }
                </select>
            </td>
            <td>
                <select name="Requester" class="form-control" required>
                    <option value="">-- Select Requester --</option>
                        @foreach (var requester in requesters)
                        {
                        <option value="@requester">@requester</option>
                        }
                </select>
            </td>
            <td><textarea name="Problem" class="form-control" required></textarea></td>
            <td><input type="checkbox" name="DownStatus" value="true" /></td>
            <td><input type="number" name="HourMeter" class="form-control" min="0" /></td>
            <td>
                <select name="Department" class="form-control" required>
                    <option value="">-- Select Department --</option>
                    <option value="Finishing">Finishing</option>
                    <option value="General">General</option>
                    <option value="Maintenance">Maintenance</option>
                    <option value="Molding">Molding</option>
                    <option value="Packing">Packing</option>
                    <option value="Quality">Quality</option>
                    <option value="Secondary">Secondary</option>
                    <option value="Sintering">Sintering</option>
                    <option value="Tooling">Tooling</option>
                </select>
            </td>
            <td>
                <input type="file" name="file" class="form-control" accept="image/*" />
            </td>
            <td><button type="submit" class="btn btn-primary btn-sm">Submit</button></td>
            </form>
        </tr>

        @foreach (var request in Model)
        {
            <tr>
                <td>@request.Id</td>
                <td>@request.Equipment</td>
                <td>@request.Requester</td>
                <td>@request.Problem</td>
                <td>@(request.DownStatus == true ? "Yes" : "No")</td>
                <td>@(request.HourMeter.HasValue ? request.HourMeter.Value.ToString() : "N/A")</td>
                <td>@request.Department</td>

                <td>
                    @if (!string.IsNullOrEmpty(request.FileAddressMediaLink))
                    {
                        <button class="btn btn-info btn-sm fetch-image-btn"
                                data-file-path="@request.FileAddressMediaLink">
                            Preview Image
                        </button>
                    }
                    else
                    {
                        <span>No Image</span>
                    }
                </td>

                <td>
                    <form action="/MaintenanceRequest/UpdateMediaLinkFile" method="post" enctype="multipart/form-data">
                        <input type="hidden" name="id" value="@request.Id" />
                        <input type="file" name="file" class="form-control" accept="image/*" required />
                        <button type="submit" class="btn btn-primary btn-sm mt-2">Upload File</button>
                    </form>
                </td>
            </tr>
        }
    </tbody>
</table>

<!-- Modal for Image Preview -->
<div class="modal fade" id="imageModal" tabindex="-1" aria-labelledby="imageModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="imageModalLabel">Image Preview</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body text-center">
                <img id="modalImage" src="" alt="Image Preview" class="img-fluid">
            </div>
        </div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const modalElement = document.getElementById('imageModal');

        // Fetch and display the image preview
        document.querySelectorAll('.fetch-image-btn').forEach(button => {
            button.addEventListener('click', function () {
                const filePath = this.dataset.filePath;

                if (!filePath) {
                    alert("No file path provided.");
                    return;
                }

                fetch(`/MaintenanceRequest/FetchImage?filePath=${encodeURIComponent(filePath)}`)
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            document.getElementById('modalImage').src = data.url;
                            new bootstrap.Modal(modalElement).show();
                        } else {
                            alert(`Error: ${data.message}`);
                        }
                    })
                    .catch(error => alert('An error occurred while fetching the image.'));
            });
        });

        // Cleanup the modal when hidden
        modalElement.addEventListener('hidden.bs.modal', function () {
            document.getElementById('modalImage').src = '';
        });
    });
</script>
