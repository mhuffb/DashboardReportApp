@model List<DashboardReportApp.Models.HoldRecordModel>

<div class="container-fluid px-3">
    <!-- Full-width container -->
    <h2 class="text-center mb-4">Admin Panel - Edit Hold Records</h2>
    <a href="@Url.Action("Logout", "Admin")" class="btn btn-danger mb-3">Logout</a>

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger fade show" role="alert">
            @TempData["ErrorMessage"]
        </div>
    }
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success fade show" role="alert">
            @TempData["SuccessMessage"]
        </div>
    }

    <div class="table-responsive">
        <table class="table table-striped table-bordered shadow-sm w-100">
            <thead class="table-dark">
                <tr>
                    <th style="width: 3%;">ID</th>
                    <th style="width: 7%;">Part</th>
                    <th style="width: 10%;">Discrepancy</th>
                    <th style="width: 7%;">Date</th>
                    <th style="width: 7%;">Issued By</th>
                    <th style="width: 10%;">Disposition</th>
                    <th style="width: 6%;">Disposition By</th>
                    <th style="width: 10%;">Rework Instructions</th>
                    <th style="width: 7%;">Rework Instr By</th>
                    <th style="width: 4%;">Quantity</th>
                    <th style="width: 7%;">Unit</th>
                    <th style="width: 4%;">Pcs Scrapped</th>
                    <th style="width: 7%;">Date Completed</th>
                    <th style="width: 4%;">File</th>
                    <th style="width: 4%;">Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var record in Model)
                {
                    <tr>
                        <form asp-controller="AdminHoldTag" asp-action="UpdateRequest" method="post" enctype="multipart/form-data">
                            <input type="hidden" name="Id" value="@record.Id" />
                        <td>@record.Id</td>
                        <td><input type="text" name="Part" value="@record.Part" class="form-control w-100" /></td>
                        <td><textarea name="Discrepancy" class="form-control w-100 text-area-large">@record.Discrepancy</textarea></td>
                        <td><input type="date" name="Date" value="@(record.Date?.ToString("yyyy-MM-dd") ?? "")" class="form-control w-100" /></td>
                        <td><input type="text" name="IssuedBy" value="@record.IssuedBy" class="form-control w-100" /></td>
                        <td><textarea name="Disposition" class="form-control w-100 text-area-large">@record.Disposition</textarea></td>
                        <td><input type="text" name="DispositionBy" value="@record.DispositionBy" class="form-control w-100" /></td>
                        <td><textarea name="ReworkInstr" class="form-control w-100 text-area-large">@record.ReworkInstr</textarea></td>
                        <td><input type="text" name="ReworkInstrBy" value="@record.ReworkInstrBy" class="form-control w-100" /></td>
                        <td><input type="number" name="Quantity" value="@record.Quantity" class="form-control w-100" /></td>
                        <td><input type="text" name="Unit" value="@record.Unit" class="form-control w-100" /></td>
                        <td><input type="number" name="PcsScrapped" value="@(record.PcsScrapped?.ToString() ?? "")" class="form-control w-100" /></td>
                        <td><input type="date" name="DateCompleted" value="@(record.DateCompleted?.ToString("yyyy-MM-dd") ?? "")" class="form-control w-100" /></td>
                        <td>
                            <input type="hidden" name="FileAddress" value="@record.FileAddress" />
                            <input type="file" name="FileUpload" class="form-control w-100" accept="image/*,.pdf,.doc,.docx" />
                                @if (!string.IsNullOrEmpty(record.FileAddress))
                                {
                                <button type="button" class="btn btn-info btn-sm mt-2 fetch-image-btn w-100" data-file-path="@record.FileAddress">
                                    Preview File
                                </button>
                                }
                        </td>
                        <td>
                            <button type="submit" class="btn btn-success btn-sm w-100"><i class="bi bi-save"></i> Save</button>
                        </td>
                        </form>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<!-- Custom Styles -->
<style>
    /* Force full width */
    .full-width-table {
        width: 100% !important;
    }

    /* Ensures table doesn't shrink */
    .table {
        table-layout: fixed;
    }

    /* Keep table responsive with horizontal scrolling */
    .table-responsive {
        overflow-x: auto;
        display: block;
    }

    /* Increase text area size */
    .text-area-large {
        min-height: 150px !important;
    }

    /* Improve button animations */
    .btn {
        transition: 0.3s ease-in-out;
    }

        .btn:hover {
            transform: scale(1.05);
        }
</style>
<!-- Bootstrap Modal for File Preview -->
<div class="modal fade" id="imageModal" tabindex="-1" aria-labelledby="imageModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="imageModalLabel">File Preview</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body text-center">
                <img id="modalImage" src="" alt="Preview" class="img-fluid" />
                <iframe id="modalFile" class="w-100" style="height:500px; display:none;"></iframe>
            </div>
        </div>
    </div>
</div>

<!-- CSS for Proper Word Wrapping and Readability -->
<style>
    .table {
        table-layout: fixed;
        width: 100%;
    }

        .table th, .table td {
            word-wrap: break-word;
            overflow-wrap: break-word;
            white-space: normal !important;
        }

    /* Smaller width for ID column */
    th:nth-child(1), td:nth-child(1) {
        width: 50px;
    }

    /* Ensure textareas resize properly */
    textarea.form-control {
        resize: vertical; /* Allow vertical resizing */
        min-height: 100px; /* Set a minimum height for textareas */
    }
</style>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const modalElement = document.getElementById('imageModal');

            document.querySelectorAll('.fetch-image-btn').forEach(button => {
                button.addEventListener('click', function () {
                    const filePath = this.dataset.filePath;

                    if (!filePath) {
                        console.error("File path is missing.");
                        alert("No file path provided.");
                        return;
                    }

                    fetch(`/MaintenanceRequest/FetchImage?filePath=${encodeURIComponent(filePath)}`)
                        .then(response => {
                            if (!response.ok) throw new Error("Failed to fetch the image.");
                            return response.json();
                        })
                        .then(data => {
                            if (data.success) {
                                const modalImage = document.getElementById('modalImage');
                                const modalFile = document.getElementById('modalFile');

                                if (data.url.endsWith(".jpg") || data.url.endsWith(".png") || data.url.endsWith(".jpeg") || data.url.endsWith(".gif")) {
                                    modalImage.src = data.url;
                                    modalImage.style.display = "block";
                                    modalFile.style.display = "none";
                                } else {
                                    modalFile.src = data.url;
                                    modalFile.style.display = "block";
                                    modalImage.style.display = "none";
                                }

                                const bootstrapModal = new bootstrap.Modal(modalElement);
                                bootstrapModal.show();
                            } else {
                                alert(`Error: ${data.message}`);
                            }
                        })
                        .catch(error => {
                            console.error('Error fetching file:', error);
                            alert('An error occurred while fetching the file.');
                        });
                });
            });

            modalElement.addEventListener('hidden.bs.modal', function () {
                document.getElementById('modalImage').src = '';
                document.getElementById('modalFile').src = '';
            });
        });
    </script>
}