@model List<DashboardReportApp.Models.PressSetupModel>

@{
    ViewData["Title"] = "Press Setup Log";
    var operators = ViewData["Operators"] as List<string> ?? new List<string>();
    var machines = ViewData["Machines"] as List<string> ?? new List<string>();
    var trainers = ViewData["Trainers"] as List<string> ?? new List<string>();
}

<div class="container mt-4">
    <h1 class="text-center mb-4">Press Setup Log</h1>

    @if (ViewData["Message"] != null)
    {
        <div class="alert alert-success fade show" role="alert">
            @ViewData["Message"]
        </div>
    }

    @if (ViewData["Error"] != null)
    {
        <div class="alert alert-danger fade show" role="alert">
            @ViewData["Error"]
        </div>
    }

    <!-- Login Form -->
    <h2 class="text-center">Start Setup</h2>
    <div class="card shadow mb-4">
        <div class="card-body">
            
            <form method="post" asp-action="Login">
                <!-- Part Selection -->
                <div class="mb-3">
                    <label for="partNumber" class="form-label">Part Number</label>
                    <select id="partNumber" name="partNumber" class="form-control" required>
                        <option value="">-- Select Part --</option>
                        @foreach (var part in ViewData["Parts"] as List<string> ?? new List<string>())
                        {
                            <option value="@part">@part</option>
                        }
                    </select>
                </div>

                <!-- Display Run Number -->
                <div class="mb-3">
                    <label for="runNumber" class="form-label">Run Number</label>
                    <input type="text" id="runNumber" name="runNumber" class="form-control" readonly />
                </div>

                <!-- Operator Dropdown -->
                <div class="mb-3">
                    <label for="operatorName" class="form-label">Operator</label>
                    <select id="operatorName" name="operatorName" class="form-control" required>
                        <option value="">-- Select Operator --</option>
                        @foreach (var op in ViewData["Operators"] as List<string> ?? new List<string>())
                        {
                            <option value="@op">@op</option>
                        }
                    </select>
                </div>

                <!-- Machine Dropdown -->
                <div class="mb-3">
                    <label for="machine" class="form-label">Machine</label>
                    <select id="machine" name="machine" class="form-control" required>
                        <option value="">-- Select Machine --</option>
                        @foreach (var machine in ViewData["Machines"] as List<string> ?? new List<string>())
                        {
                            <option value="@machine">@machine</option>
                        }
                    </select>
                </div>

                <button type="submit" class="btn btn-primary w-100">Login</button>
            </form>
        </div>
    </div>

    <!-- Active Logins with Logout -->
    <h2 class="text-center mb-4">Open Setups</h2>
    <div class="card shadow mb-4">
        <div class="card-body">
            
            <div class="container-fluid px-3 mt-4">
                <table class="table table-striped table-bordered shadow-sm">
                    <thead class="table-dark" >
                        <tr>
                            <th>Part</th>
                            <th>Operator</th>
                            <th>Machine</th>
                            <th>Start Time</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var login in Model.Where(x => x.Open == "1"))
                        {
                            <tr>
                                <td>@login.Part</td>
                                <td>@login.Operator</td>
                                <td>@login.Machine</td>
                                <td>@(login.StartDateTime?.ToString("yyyy-MM-dd HH:mm") ?? "N/A")</td>
                                <td>
                                    <form method="post" asp-action="Logout" class="p-3">
                                        <input type="hidden" name="partNumber" value="@login.Part" />
                                        <input type="hidden" name="startDateTime" value="@login.StartDateTime" />

                                        <div class="mb-3">
                                            <label for="difficulty" class="form-label">Difficulty</label>
                                            <select name="difficulty" class="form-control" required>
                                                <option value="">-- Select Difficulty --</option>
                                                <option value="A">A</option>
                                                <option value="B">B</option>
                                                <option value="C">C</option>
                                                <option value="D">D</option>
                                            </select>
                                        </div>

                                        <div class="mb-3">
                                            <label for="assistanceRequired" class="form-label">Assistance Required</label>
                                            <select name="assistanceRequired" class="form-control assistance-required" data-assisted-by="assistedByField-@login.Part" required>
                                                <option value="">-- Select Assistance --</option>
                                                <option value="Solo">Solo</option>
                                                <option value="Assisted">Assisted</option>
                                            </select>
                                        </div>

                                        <div class="mb-3 assisted-by-field d-none" id="assistedByField-@login.Part">
                                            <label for="assistedBy" class="form-label">Assisted By</label>
                                            <select name="assistedBy" class="form-control">
                                                <option value="">-- Select Trainer --</option>
                                                @foreach (var trainer in trainers)
                                                {
                                                    <option value="@trainer">@trainer</option>
                                                }
                                            </select>
                                        </div>

                                        <div class="mb-3">
                                            <label for="setupComplete" class="form-label">Setup Complete</label>
                                            <select name="setupComplete" class="form-control" required>
                                                <option value="">-- Select Setup Status --</option>
                                                <option value="Yes">Yes</option>
                                                <option value="No">No</option>
                                            </select>
                                        </div>

                                        <div class="mb-3">
                                            <label for="notes" class="form-label">Notes</label>
                                            <textarea name="notes" class="form-control text-area-large"></textarea>
                                        </div>

                                        <button type="submit" class="btn btn-danger w-100">Logout</button>
                                    </form>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <!-- Full List of Records -->
    <h2 class="text-center mt-4">All Setup Records</h2>
    <div class="card shadow mb-4">
        <div class="card-body">
            <div class="container-fluid px-3 mt-4">
                <!-- REPLACE the old table with a div for React: -->
                <div id="myReactTableRoot"
                     data-records='@Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model))'>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Custom Styles -->

<script src="/js/mydatatable.bundle.js"></script>
<script>
    document.addEventListener('DOMContentLoaded', function() {
      // 1) Find the container
      const container = document.getElementById('myReactTableRoot');
      if (!container) return;

      // 2) Parse the JSON from data-records
      const rawData = container.getAttribute('data-records');
      const data = JSON.parse(rawData); // This is your List<PressSetupModel>

      // 3) Define columns to match PressSetupModel's properties
      const columns = [
         {key: 'Id', label: 'Id' },
        { key: 'Part', label: 'Part' },
        { key: 'Operator', label: 'Operator' },
        { key: 'Machine', label: 'Machine' },
        { key: 'StartDateTime', label: 'Start Time' },
        { key: 'EndDateTime', label: 'End Time' },
        { key: 'SetupComp', label: 'Setup Complete' },
        { key: 'AssistanceReq', label: 'Assist Required' },
        { key: 'AssistedBy', label: 'Assisted By' },
        { key: 'Notes', label: 'Notes' }
      ];

      // 4) Use the exposed function from the React bundle
      window.renderMyDataTable(
        'myReactTableRoot', // the container ID
        data,
        columns,
        true  // enableSearch = true or false
      );
    });
</script>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        const partDropdown = document.getElementById("partNumber");
        const runField = document.getElementById("runNumber");

        partDropdown.addEventListener("change", function () {
            const selectedPart = this.value;
            fetch(`/PressSetup/GetRunForPart?part=${encodeURIComponent(selectedPart)}`)
                .then(response => response.json())
                .then(data => {
                    runField.value = data.run || "";
                })
                .catch(error => console.error("Error fetching run:", error));
        });
    });
</script>