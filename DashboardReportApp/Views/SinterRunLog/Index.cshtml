@model DashboardReportApp.Models.SinterRunLogViewModel
@using System.Text.Json;
@using Microsoft.AspNetCore.Mvc.Rendering
@{
    var pageSizeOptions = new List<SelectListItem>
    {
        new("25 / page",  "25",  Model.PageSize == 25),
        new("50 / page",  "50",  Model.PageSize == 50),
        new("100 / page", "100", Model.PageSize == 100),
        new("200 / page", "200", Model.PageSize == 200),
    };

    var sortOptions = new List<SelectListItem>
    {
        new("ID",          "id",            string.Equals(Model.Sort, "id", StringComparison.OrdinalIgnoreCase)),
        new("Start",       "startDateTime", string.Equals(Model.Sort, "startDateTime", StringComparison.OrdinalIgnoreCase)),
        new("End",         "endDateTime",   string.Equals(Model.Sort, "endDateTime", StringComparison.OrdinalIgnoreCase)),
        new("Prod #",      "prodNumber",    string.Equals(Model.Sort, "prodNumber", StringComparison.OrdinalIgnoreCase)),
        new("Part",        "part",          string.Equals(Model.Sort, "part", StringComparison.OrdinalIgnoreCase)),
        new("Furnace",     "oven",          string.Equals(Model.Sort, "oven", StringComparison.OrdinalIgnoreCase)),
        new("Operator",    "operator",      string.Equals(Model.Sort, "operator", StringComparison.OrdinalIgnoreCase)),
    };

    var dirOptions = new List<SelectListItem>
    {
        new("Desc", "DESC", string.Equals(Model.Dir, "DESC", StringComparison.OrdinalIgnoreCase)),
        new("Asc",  "ASC",  string.Equals(Model.Dir, "ASC",  StringComparison.OrdinalIgnoreCase)),
    };
}


@{
    ViewData["Title"] = "Sintering Run Log";

   

}

<div class="container-fluid px-3">
<div class="table-responsive">
    <h1 class="text-center mb-4">Sintering Run Log</h1>

     <!-- Open Sintering Production Skid Runs -->
        <!-- Open Sintering Production Skid Runs -->
        <h2 class="text-center mb-4">Open Sintering Production Skid Runs</h2>
        <div class="card shadow mb-4">
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table table-striped table-bordered shadow-sm wider-table">
                        <thead class="table-dark">
                            <tr>
                                <th>ID</th>
                                <th>Timestamp</th>
                                <th>Production Number</th>
                                <th>Run</th>
                                <th>Start Time</th>
                                <th>Operator</th>
                                <th>Furnace</th>
                                <th>Part</th>
                                <th>Component</th> <!-- New Column -->
                                <th>Skid Number</th>
                                <th>PCS</th>
                                <th>Process</th>
                                <th>Notes</th>
                                <th>Action</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var skid in Model.OpenSinterRuns)
                            {
                                var matchingPressRun = Model.OpenGreenSkids.FirstOrDefault(pr =>
                                pr.ProdNumber == skid.ProdNumber &&
                                pr.Part == skid.Part &&
                                pr.SkidNumber == skid.SkidNumber);

                                var pcsDiff = matchingPressRun != null ? (matchingPressRun.PcsEnd - matchingPressRun.PcsStart) : 0;

                                <tr>
                                    <td>@skid.Id</td>
                                    <td>@skid.Timestamp</td>
                                    <td>@skid.ProdNumber</td>
                                    <td>@skid.Run</td>
                                    <td>@skid.StartDateTime</td>
                                    <td>@skid.Operator</td>
                                    <td>@skid.Machine</td>
                                    <td>@skid.Part</td>
                                    <td>@skid.Component</td>
                                    <td>@skid.SkidNumber</td>
                                    <td>@skid.Pcs</td>
                                    <td>@skid.Process</td>
                                    <td>@skid.Notes</td>
                                    <td>
                                        <button class="btn btn-warning btn-sm"
                                                data-bs-toggle="modal"
                                                data-bs-target="#endSkidModal"
                                                data-prodnumber="@skid.ProdNumber"
                                                data-part="@skid.Part"
                                                data-skidnumber="@skid.SkidNumber"
                                                data-pcs="@skid.Pcs"
                                                data-run="@skid.Run"
                                                data-operator="@skid.Operator"
                                                data-machine="@skid.Machine"
                                                data-process="@skid.Process"
                                                data-notes="@skid.Notes">
                                            End Skid
                                        </button>
                                        <button class="btn btn-danger btn-sm ms-1"
                                                data-bs-toggle="modal"
                                                data-bs-target="#logoutSkidModal"
                                                data-part="@skid.Part"
                                                data-run="@skid.Run"
                                                data-prodnumber="@skid.ProdNumber"
                                                data-starttime="@skid.StartDateTime"
                                                data-skidnumber="@skid.SkidNumber"
                                                data-pcs="@pcsDiff"
                                                data-process="@skid.Process"
                                                data-notes="@skid.Notes">
                                            Logout of Skid Run
                                        </button>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>


    <h2 class="text-center mb-4">Green Skids Available to be Sintered</h2>
    <!-- Green Skids Table -->
        <!-- Green Skids Table -->
        <!-- Green Skids Table -->
        <div class="card shadow mb-4">
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table table-striped table-bordered shadow-sm wider-table">
                        <thead class="table-dark">
                            <tr>
                                <th>ID</th>
                                <th>Prod Number</th>
                                <th>Run</th>
                                <th>End DateTime</th>
                                <th>Operator</th>
                                <th>Machine</th>
                                <th>Part</th>
                                <th>Component</th> <!-- New Column -->
                                <th>Skid Number</th>
                                <th>Pcs</th>
                                <th>Notes</th>
                                <th>Action</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var pressRun in Model.OpenGreenSkids)
                            {
                                <tr>
                                    <td>@pressRun.Id</td>
                                    <td>@pressRun.ProdNumber</td>
                                    <td>@pressRun.Run</td>
                                    <td>@(pressRun.EndDateTime?.ToString("g") ?? "N/A")</td>
                                    <td>@pressRun.Operator</td>
                                    <td>@pressRun.Machine</td>
                                    <td>@pressRun.Part</td>
                                    <td>@pressRun.Component</td> <!-- Display Component -->
                                    <td>@pressRun.SkidNumber</td>
                                    <td>@(pressRun.PcsEnd - pressRun.PcsStart)</td>
                                    <td>@pressRun.Notes</td>
                                    <td>
                                        <button class="btn btn-primary btn-sm"
                                                data-bs-toggle="modal"
                                                data-bs-target="#loginSkidModal"
                                                data-id="@pressRun.Id"
                                                data-prodnumber="@pressRun.ProdNumber"
                                                data-run="@pressRun.Run"
                                                data-part="@pressRun.Part"
                                                data-machine="@pressRun.Machine"
                                                data-operator="@pressRun.Operator"
                                                data-notes="@pressRun.Notes"
                                                data-pcsstart="@pressRun.PcsStart"
                                                data-pcsend="@pressRun.PcsEnd"
                                                data-skidnumber="@pressRun.SkidNumber">
                                            Login to Skid Run
                                        </button>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>

</div>
</div>
    <script>
        function updateHiddenRun() {
            const partSelect = document.getElementById("Part");
            const prodHidden = document.getElementById("ProdNumber");
            const runHidden = document.getElementById("RunNumber");
            const selectedOption = partSelect.options[partSelect.selectedIndex];

            if (!selectedOption) {
                console.error("No option selected!");
                return;
            }

            const selectedRun = selectedOption.getAttribute("data-run") || "";
            const selectedProdNumber = selectedOption.getAttribute("prodNum") || "";
            prodHidden.value = selectedProdNumber;
            runHidden.value = selectedRun; // Set the hidden run value
            console.log("Selected Run:", selectedRun);
        }
    </script>

   


    <!-- Full List of Records (React Table) -->
    <h3 class="text-center mt-4">All Sinter Run Records</h3>
<div class="card shadow mb-4">
  <div class="card-body">
        <form class="row g-2 mb-3" method="get" action="/SinterRunLog">
            <div class="col-sm-4">
                <input asp-for="Search" name="Search" class="form-control" placeholder="Search Prod/Run/Part/Oven/Operator" />
            </div>

            <div class="col-sm-2">
                <select asp-for="PageSize" asp-items="pageSizeOptions" class="form-select"></select>
            </div>

            <div class="col-sm-2">
                <select asp-for="Sort" asp-items="sortOptions" class="form-select"></select>
            </div>

            <div class="col-sm-2">
                <select asp-for="Dir" asp-items="dirOptions" class="form-select"></select>
            </div>

            <div class="col-sm-2">
                <button class="btn btn-primary w-100">Apply</button>
            </div>
        </form>


    <div class="table-responsive">
      <table class="table table-striped table-bordered shadow-sm wider-table">
        <thead class="table-dark">
            <tr>
                <th>ID</th>
                <th>Production Number</th>
                <th>Run</th>
                <th>Part</th>
                <th>Component</th>
                <th>Furnace</th>
                <th>Skid #</th>
                <th>Pcs</th>
                <th>Process</th>
                <th>Start</th>
                <th>End</th>
                <th>Operator</th>
                <th>Notes</th>
            </tr>
        </thead>
        <tbody>
        @foreach (var row in Model.PageItems)
        {
            <tr>
                <td>@row.Id</td>
                <td>@row.ProdNumber</td>
                <td>@row.Run</td>
                <td>@row.Part</td>
                <td>@row.Component</td>
                <td>@row.Machine</td>
                <td>@row.SkidNumber</td>
                <td>@row.Pcs</td>
                <td>@row.Process</td>
                <td>@row.StartDateTime</td>
                <td>@row.EndDateTime</td>
                <td>@row.Operator</td>
                <td>@row.Notes</td>
            </tr>
        }
        </tbody>
      </table>
    </div>

    @{
        var firstItem = (Model.Total == 0) ? 0 : ((Model.Page - 1) * Model.PageSize) + 1;
        var lastItem  = Math.Min(Model.Page * Model.PageSize, Model.Total);
        var totalPages = (int)Math.Ceiling((double)Model.Total / Model.PageSize);
        string qsBase = $"?search={Model.Search}&pageSize={Model.PageSize}&sort={Model.Sort}&dir={Model.Dir}";
    }
    <div class="d-flex justify-content-between align-items-center">
        <div>Showing <strong>@firstItem–@lastItem</strong> of <strong>@Model.Total</strong></div>
        <nav>
            <ul class="pagination mb-0">
                <li class="page-item @(Model.Page<=1?"disabled":"")">
                    <a class="page-link" href="@($"/SinterRunLog{qsBase}&page={Model.Page-1}")">Prev</a>
                </li>
                @for (int p = Math.Max(1, Model.Page-2); p <= Math.Min(totalPages, Model.Page+2); p++)
                {
                    <li class="page-item @(p==Model.Page?"active":"")">
                        <a class="page-link" href="@($"/SinterRunLog{qsBase}&page={p}")">@p</a>
                    </li>
                }
                <li class="page-item @(Model.Page>=totalPages?"disabled":"")">
                    <a class="page-link" href="@($"/SinterRunLog{qsBase}&page={Model.Page+1}")">Next</a>
                </li>
            </ul>
        </nav>
    </div>
  </div>
</div>


   
  

    <!-- Modal for Logging In a Skid Run -->
    <div class="modal fade" id="loginSkidModal" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Login Skid Run</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form method="post" action="/SinterRunLog/LoginToSkid">
                        <!-- Hidden fields -->
                        <input type="hidden" id="pressRunId" name="pressRunId" />
                        <input type="hidden" id="ProdNumber" name="ProdNumber" />
                        <input type="hidden" id="Run" name="Run" />
                        <input type="hidden" id="Part" name="Part" />
                        <input type="hidden" id="SkidNumber" name="SkidNumber" />

                        <!-- Display Part -->
                        <div class="mb-3">
                            <label class="form-label" style="color: goldenrod;">Part</label>
                            <p id="displayPart" class="form-control-plaintext" style="color: goldenrod;"></p>
                        </div>

                        <!-- Editable field for PCS and display Skid Number -->
                        <div class="mb-3">
                            <label for="Pcs" class="form-label">Pcs</label>
                            <input type="number" id="Pcs" name="Pcs" class="form-control" required />
                        </div>

                        <!-- Display Skid Number as read-only -->
                        <div class="mb-3">
                            <label class="form-label">Skid Number</label>
                            <p id="displaySkidNumber" class="form-control-" style="color: #000; font-weight: bold;"></p>
                        </div>

                        <div class="mb-3">
                            <label for="Operator" class="form-label">Operator</label>
                        <select id="Operator" name="Operator" class="form-select" required>
                            <option value="">Select an Operator</option>
                            @foreach (var op in Model.Operators ?? Enumerable.Empty<string>())
                            {
                                <option value="@op">@op</option>
                            }
                        </select>

                       

                        </div>

                        <div class="mb-3">
                            <label for="Machine" class="form-label">Furnace</label>
                        <select id="Machine" name="Machine" class="form-select" required>
                            <option value="">Select a Furnace</option>
                            @foreach (var furnace in Model.Furnaces ?? Enumerable.Empty<string>())
                            {
                                <option value="@furnace">@furnace</option>
                            }
                        </select>
                        </div>

                        <div class="mb-3">
                            <label for="Process" class="form-label">Process</label>
                            <select id="Process" name="Process" class="form-select" required>
                                <option value="Sinter">Sinter</option>
                                <option value="Anneal">Anneal</option>
                            </select>
                        </div>

                        <div class="mb-3">
                            <label for="Notes" class="form-label">Notes</label>
                            <textarea id="Notes" name="Notes" class="form-control"></textarea>
                        </div>

                        <button type="submit" class="btn btn-primary w-100">Login Skid Run</button>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <script>
                    document.addEventListener("DOMContentLoaded", function() {
                var loginSkidModal = document.getElementById('loginSkidModal');
                loginSkidModal.addEventListener('show.bs.modal', function(event) {
                    var button = event.relatedTarget;
                    var pressRunId = button.getAttribute('data-id');
                    var prodNumber = button.getAttribute('data-prodnumber');
                    var run = button.getAttribute('data-run');
                    var part = button.getAttribute('data-part');
                    var machine = button.getAttribute('data-machine');
                    var notes = button.getAttribute('data-notes');
                    var skidNumber = button.getAttribute('data-skidnumber');

                    // Try to get pcsStart and pcsEnd for skid runs.
                    var pcsStartStr = button.getAttribute('data-pcsstart');
                    var pcsEndStr = button.getAttribute('data-pcsend');
                    var pcs = 0;
                    if (pcsStartStr !== null && pcsEndStr !== null && pcsStartStr.trim() !== "" && pcsEndStr.trim() !== "") {
                        pcs = parseFloat(pcsEndStr) - parseFloat(pcsStartStr);
                    } else {
                        // For green assemblies, use the data-pcs attribute
                        var pcsAttr = button.getAttribute('data-pcs');
                        pcs = parseFloat(pcsAttr) || 0;
                    }

                    // Populate hidden inputs
                    loginSkidModal.querySelector('#pressRunId').value = pressRunId;
                    loginSkidModal.querySelector('#ProdNumber').value = prodNumber;
                    loginSkidModal.querySelector('#Run').value = run;
                    loginSkidModal.querySelector('#Part').value = part;
                    loginSkidModal.querySelector('#SkidNumber').value = skidNumber;
                    loginSkidModal.querySelector('#Pcs').value = pcs;

                    // Populate visible elements
                    loginSkidModal.querySelector('#displayPart').textContent = part;
                    loginSkidModal.querySelector('#displaySkidNumber').textContent = skidNumber;
                    loginSkidModal.querySelector('#displaySkidNumber').style.color = "#000";
                    loginSkidModal.querySelector('#displaySkidNumber').style.fontWeight = "bold";

                    // Preselect the furnace if possible
                    var machineSelect = loginSkidModal.querySelector('#Machine');
                    machineSelect.value = machine || "";

                    // Pre-fill the notes field if provided
                    loginSkidModal.querySelector('#Notes').value = notes || "";
                });
            });

    </script>

    <!-- Modal for Ending Skid Run -->
    <div class="modal fade" id="endSkidModal" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">End Skid Run</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form method="post" action="/SinterRunLog/EndSkid">
                        <!-- Hidden Fields: Ensuring All Data is Sent -->
                        <input type="hidden" id="end_prodNumber" name="prodNumber" />
                        <input type="hidden" id="end_part" name="part" />
                        <input type="hidden" id="end_skidNumber" name="skidNumber" />
                        <input type="hidden" id="end_pcs" name="pcs" />
                        <input type="hidden" id="end_run" name="run" />
                        <input type="hidden" id="end_oper" name="oper" />
                        <input type="hidden" id="end_oven" name="oven" />
                        <input type="hidden" id="end_process" name="process" /> <!-- Hidden but still sent -->

                        <p>Please confirm ending the skid run for the following:</p>
                        <p><strong>Prod Number:</strong> <span id="end_displayProdNumber"></span></p>
                        <p><strong>Part:</strong> <span id="end_displayPart"></span></p>
                        <p><strong>Skid Number:</strong> <span id="end_displaySkidNumber"></span></p>
                        <p><strong>Pcs:</strong> <span id="end_displayPcs"></span></p>

                        <!-- Editable Notes Field -->
                        <div class="mb-3">
                            <label for="end_notes" class="form-label">Notes</label>
                            <textarea id="end_notes" name="notes" class="form-control"></textarea>
                        </div>

                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                            <button type="submit" class="btn btn-danger">End Skid</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>



    <script>
                             document.addEventListener("DOMContentLoaded", function () {
                var endSkidModal = document.getElementById('endSkidModal');
                endSkidModal.addEventListener('show.bs.modal', function (event) {
                    var button = event.relatedTarget;

                    // Log the entire dataset for debugging
                    console.log("Button dataset:", button.dataset);

                    // Retrieve data using the dataset property
                    var prodNumber = button.dataset.prodnumber;
                    var part = button.dataset.part;
                    var skidNumber = button.dataset.skidnumber;
                    var pcs = button.dataset.pcs; // This should be the value you're expecting
                    var run = button.dataset.run;
                    var oper = button.dataset.operator;
                    var oven = button.dataset.machine;
                    var process = button.dataset.process || "";
                    var notes = button.dataset.notes || "";

                    console.log("Retrieved pcs:", pcs);

                    // Fallback to 0 if pcs is empty or not a number
                    if (!pcs || isNaN(parseFloat(pcs))) {
                        pcs = "0";
                    }

                    // Populate hidden inputs
                    endSkidModal.querySelector('#end_prodNumber').value = prodNumber;
                    endSkidModal.querySelector('#end_part').value = part;
                    endSkidModal.querySelector('#end_skidNumber').value = skidNumber;
                    endSkidModal.querySelector('#end_pcs').value = pcs;
                    endSkidModal.querySelector('#end_run').value = run;
                    endSkidModal.querySelector('#end_oper').value = oper;
                    endSkidModal.querySelector('#end_oven').value = oven;
                    endSkidModal.querySelector('#end_process').value = process;
                    endSkidModal.querySelector('#end_notes').value = notes;

                    // Populate visible elements
                    endSkidModal.querySelector('#end_displayProdNumber').textContent = prodNumber;
                    endSkidModal.querySelector('#end_displayPart').textContent = part;
                    endSkidModal.querySelector('#end_displaySkidNumber').textContent = skidNumber;
                    endSkidModal.querySelector('#end_displayPcs').textContent = pcs;
                });
            });


    </script>



    <!-- Modal for Logging Out of Skid Run -->
        <!-- Modal for Logging Out of Skid Run -->
        <div class="modal fade" id="logoutSkidModal" tabindex="-1" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">Logout of Skid Run</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                    </div>
                    <div class="modal-body">
                        <form id="logoutSkidForm" method="post" action="/SinterRunLog/LogoutOfSkid">
                            <!-- Hidden Fields: Ensuring All Data is Sent -->
                            <input type="hidden" id="logout_prodNumber" name="prodNumber" />
                            <input type="hidden" id="logout_part" name="part" />
                            <input type="hidden" id="logout_run" name="run" />
                            <input type="hidden" id="logout_skidNumber" name="skidNumber" />

                            <p>Please confirm logging out of the skid run:</p>
                            <p><strong>Run:</strong> <span id="logout_displayRun"></span></p>
                            <p><strong>Skid Number:</strong> <span id="logout_displaySkidNumber"></span></p>

                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                                <button type="submit" class="btn btn-danger">Logout of Skid Run</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>


    <script>
                   document.addEventListener("DOMContentLoaded", function () {
                var logoutSkidModal = document.getElementById('logoutSkidModal');
                logoutSkidModal.addEventListener('show.bs.modal', function (event) {
                    var button = event.relatedTarget;

                    // Extract data attributes
                    var part = button.getAttribute('data-part');
                    var run = button.getAttribute('data-run');
                    var skidNumber = button.getAttribute('data-skidnumber');
                    var prodNumber = button.getAttribute('data-prodnumber'); // <-- We have it here

                    // Populate hidden form fields
                    logoutSkidModal.querySelector('#logout_prodNumber').value = prodNumber; // <-- Add this
                    logoutSkidModal.querySelector('#logout_part').value = part;
                    logoutSkidModal.querySelector('#logout_run').value = run;
                    logoutSkidModal.querySelector('#logout_skidNumber').value = skidNumber;

                    // Populate visible confirmation fields
                    logoutSkidModal.querySelector('#logout_displayRun').textContent = run;
                    logoutSkidModal.querySelector('#logout_displaySkidNumber').textContent = skidNumber;
                });
            });

    </script>


    <script>
        function openStopSinteringModal(runId, part, run, startDateTime) {
            if (!confirm(`Are you sure you want to stop sintering for ${part} (Run: ${run}) started at ${startDateTime}?`)) {
                return;
            }
            console.log("Stopping sintering:", { runId, part, run, startDateTime });
            const form = document.createElement("form");
            form.method = "post";
            form.action = "/SinterRunLog/LogoutOfSkid";
            const partInput = document.createElement("input");
            partInput.type = "hidden";
            partInput.name = "part";
            partInput.value = part;
            form.appendChild(partInput);
            const runInput = document.createElement("input");
            runInput.type = "hidden";
            runInput.name = "run";
            runInput.value = run;
            form.appendChild(runInput);
            document.body.appendChild(form);
            form.submit();
        }
    </script>
    </div>
